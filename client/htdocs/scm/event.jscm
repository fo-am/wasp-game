;; -*- mode: scheme; -*-
;; Why We Love Wasps Copyright (C) 2019 FoAM Kernow
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU Affero General Public License as
;; published by the Free Software Foundation, either version 3 of the
;; License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU Affero General Public License for more details.
;;
;; You should have received a copy of the GNU Affero General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

(define (make-event type probability time fn) 
  (list type probability time fn time))

(define (event-type e) (list-ref e 0))
(define (event-probability e) (list-ref e 1))
(define (event-duration e) (list-ref e 2))
(define (event-fn e) (list-ref e 3))
(define (event-time-left e) (list-ref e 4))
(define (event-modify-time-left e s) (list-replace e 4 s)) 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (event-render nest ctx)
  (let ((event (nest-event nest)))
    (set! ctx.font "normal 25pt pompiere")
    (set! ctx.fillStyle "#fff")
    (set! ctx.globalAlpha 0.8)
    (ctx.fillRect 450 600 800 300)
    (set! ctx.globalAlpha 1.0)
    (set! ctx.fillStyle "#000")
    (set! ctx.font "normal 50pt pompiere")
    (msg (event-type event))
    (cond
     ((eq? (event-type event) 'storm)
      (ctx.fillText (string-append "STORM!") 480 680)
      )
     ((eq? (event-type event) 'attack)
      (ctx.fillText (string-append "ATTACK!") 480 680)
      )
     (else 0))))

(define wasp-game-events
  (list
   (make-event 
    'storm 10 10
    (lambda (nest delta)
      (nest-decimate nest (* 0.5 delta) (list 'state-forage 'state-forage-return))))
   (make-event 
    'attack 10 10
    (lambda (nest delta)
      (nest-decimate nest (* 0.5 delta) (list 'state-idle))))
   ))
  
