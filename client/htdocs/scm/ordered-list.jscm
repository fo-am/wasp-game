;; -*- mode: scheme; -*-
;; Planet Fluxus Copyright (C) 2017 Dave Griffiths
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU Affero General Public License as
;; published by the Free Software Foundation, either version 3 of the
;; License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU Affero General Public License for more details.
;;
;; You should have received a copy of the GNU Affero General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;; order children by (car) of v
(define (ordered-list-insert l v)
  (cond
    ((null? l) (list v))
    ((< (car  v) (car (car l))) (cons v l))
    (else (cons (car l) (ordered-list-insert (cdr l) v)))))

;; binary search
(define (ordered-list-search l id)
  (define (_ start end)
    (cond
     ;; no children
     ((null? l) #f)
     (else
      (let ((mid (floor (+ start (/ (- end start) 2)))))
	(cond
	 ;; not found
	 ((< (- end start) 2) #f)
	 ;; found
	 ((eq? id (car (list-ref l mid))) (list-ref l mid))
	 ;; search down
	 ((> (car (list-ref l mid)) id)
	  (_ start mid))
	 ;; search up
	 (else
	  (_ mid end)))))))
  (_ 0 (length l)))

;; can't think of a way to speed this up right now... :/
(define (ordered-list-remove l id)
  (cond
   ((null? l) '())
   ((eq? (car (car l)) id) (cdr l))
   (else (cons (car l) (ordered-list-remove (cdr l) id)))))

;; binary search
(define (ordered-list-update! l id v)
  (define (_ start end)
    (cond
     ;; no children
     ((null? l) #f)
     (else
      (let ((mid (floor (+ start (/ (- end start) 2)))))
	(cond
	 ;; not found
	 ((< (- end start) 2) #f)
	 ;; found
	 ((eq? id (car (list-ref l mid))) (set! (list-ref l mid) v))
	 ;; search down
	 ((> (car (list-ref l mid)) id)
	  (_ start mid))
	 ;; search up
	 (else
	  (_ mid end)))))))
  (_ 0 (length l)))



