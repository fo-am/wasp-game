;; -*- mode: scheme; -*-
;; Why We Love Wasps Copyright (C) 2019 FoAM Kernow
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU Affero General Public License as
;; published by the Free Software Foundation, either version 3 of the
;; License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU Affero General Public License for more details.
;;
;; You should have received a copy of the GNU Affero General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

(define (nest-scores new-nests num-workers-laid num-workers-hatched
		     cells-built events-survived
		     num-reproductives-hatched
		     energy-foraged forages max-wasps)
  (list new-nests num-workers-laid num-workers-hatched cells-built events-survived
	num-reproductives-hatched energy-foraged forages max-wasps))

;; add free starting cell
(define current-scores (nest-scores 0 0 0 1 0 0 0 0 1))
;; (define current-scores (nest-scores
;; 			2  ;; new nests
;; 			8  ;; num workers laid
;; 			8  ;; num workers hatched
;; 			10 ;; cells built 
;; 			3  ;; events survived
;; 			3  ;; num-reproductives hatched
;; 			1000 ;; energy foraged
;; 			5 ;; forages
;; 			5 ;; max wasps
;; 			))

(define (reset-scores!)
  (set! current-scores (nest-scores 0 0 0 1 0 0 0 0 0)))

(define (update-scores i v)
  (set! current-scores
	(list-replace
	 current-scores i (+ (list-ref current-scores i) v))))

(define (update-scores-new-nests! v) (update-scores 0 v))	
(define (update-scores-num-workers-laid! v) (update-scores 1 v))	
(define (update-scores-num-workers-hatched! v) (update-scores 2 v))	
(define (update-scores-cells-built! v) (update-scores 3 v))	
(define (update-scores-events-survived! v) (update-scores 4 v))	
(define (update-scores-num-reproductives-hatched! v) (update-scores 5 v))	
(define (update-scores-energy-foraged! v) (update-scores 6 v))	
(define (update-scores-forages! v) (update-scores 7 v))	
(define (update-scores-max-wasps! v)
  (when (> v (scores-max-wasps))
	(msg (list "max wasps now: " v))
	(set! current-scores (list-replace current-scores 8 v))))

(define (scores-new-nests) (list-ref current-scores 0))	
(define (scores-num-workers-laid) (list-ref current-scores 1))	
(define (scores-num-workers-hatched) (list-ref current-scores 2))	
(define (scores-cells-built) (list-ref current-scores 3))	
(define (scores-events-survived) (list-ref current-scores 4))	
(define (scores-num-reproductives-hatched) (list-ref current-scores 5))	
(define (scores-energy-foraged) (list-ref current-scores 6))	    	
(define (scores-forages) (list-ref current-scores 7))    	
(define (scores-max-wasps) (list-ref current-scores 8))    	

(define (scores-analysis)
  (cond
   ((> (scores-new-nests) 0)
    "Your wasps were succesful, and you founded new nests - well done!")
   ((> (scores-num-reproductives-hatched) 0)
    "Tip: Remember that reproductive wasps need to be dispersed at the right time of year!")
   ;; no repros --------------------------  
   ((< (scores-cells-built) 2)
    "Tip: Enlarge your nest by building cells so you can raise more wasps.")
   ((< (scores-num-workers-laid) 3)
    "Tip: You need to create more workers to help you out.")
   ((< (scores-max-wasps) 5)
    "Tip: You need more than five wasps at any time to lay reproductive wasps.")   
   ;; had plenty of cells and wasps, so more generic -----------------
   ;; more then 2 workers died as eggs
   ((> (- (scores-num-workers-laid) (scores-num-workers-hatched)) 2)
    "Tip: You need to tend your brood more often.")
   ((< (scores-forages) 3)
    "Tip: Send more workers out to forage and collect energy for you.")
   ((> (scores-events-survived) 2)
    "Tip: To maximise your points, you need to lay some reproductive wasps in order to create new nests.")   
   (else
    "Sometimes bad things happen to good wasp nests!"))
  )

