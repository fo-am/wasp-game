;; -*- mode: scheme; -*-
;; Why We Love Wasps Copyright (C) 2019 FoAM Kernow
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU Affero General Public License as
;; published by the Free Software Foundation, either version 3 of the
;; License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU Affero General Public License for more details.
;;
;; You should have received a copy of the GNU Affero General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

(load "scm/maths.jscm")
(load "scm/random.jscm")
(load "scm/nightjar.jscm")
(load "scm/local-storage.jscm")

(local-setup-params 
 "wasp-game" 
 (list
  (list "wasp-speed" 1)
  (list "wasp-build-time" 3)
  (list "wasp-laying-time" 3)
  (list "wasp-pupa-time" 20)
  (list "wasp-tending-time" 10)
  (list "wasp-forage-time" 20)
  (list "wasp-dying-time" 5)
  (list "nest-year-length" (* 60 5))
  (list "nest-forage-cost" -5)
  (list "nest-build-cell-cost" -10)
  (list "nest-lay-egg-cost" -10)
  (list "nest-tend-brood-cost" -10)
  (list "nest-defend-nest-cost" -10)
  (list "nest-forage-benefit" 20)
  (list "nest-start-energy" 100)
  (list "nest-start-wasps" 2)
  (list "event-start-time" (* 60 2.5))
  (list "storm-probability" 0.01)
  (list "pestcontrol-probability" 0.01)
  ))

(load "scm/particles.jscm")
(load "scm/animation.jscm")
(load "scm/entity.jscm")
(load "scm/entity-list.jscm")
(load "scm/windows.jscm")
(load "scm/wasp.jscm")
(load "scm/cell.jscm")
(load "scm/event.jscm")
(load "scm/storm-event.jscm")
(load "scm/pestcontrol-event.jscm")
(load "scm/nest.jscm")
(load "scm/menu.jscm")

(define (button-image)
  (find-image (choose (list "button-1.png" "button-2.png" "button-3.png"))))

(define (small-button-image)
  (find-image (choose (list "button-s1.png"))))

(define (button-sound)
  0
;  (play-sound
;   (choose
;    (list
;     "bubble-1.wav"
;     "bubble-2.wav"
;     "bubble-3.wav"
;     "bubble-7.wav"
;     )))
  )

(define default-button-x (- (/ screen-width 2) 170))
(define default-button-y (+ (/ screen-height 2) 200))
(define default-button-width 300)
(define default-button-height 80)

(define button-gap 250)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (empty-nightjar-data)
  (make-nest 
   (string->number (local-get-param "wasp-game" "nest-start-energy"))
   'city 0 
   (build-list
    (string->number (local-get-param "wasp-game" "nest-start-wasps"))
    (lambda (_)
      (make-wasp default-capabilities)))
   (build-menu 
    (vec2 100 100) #f 
    (list)
    #f 0)
   (generate-cells cell-size-x cell-size-y)
   (make-window-stack (list))
   #f
   (build-wasp-game-events)
   'calm))

;; setup new game
(define (nightjar-new-game c)
  (nightjar-game
   (game-modify-data
    (lambda (d)
      (empty-nightjar-data))
    c)))

(set! randseed (choose (list 7.21 1)))

(define (seeded-choose l)
  (list-ref l (Math.floor (* (seeded-random) (length l)))))

(define (nightjar-intro c)
    (game-modify-timeout
     (lambda ()
       (set! window.location "/"))
     (game-modify-data
      (lambda (d)
	(empty-nightjar-data))
      (game-modify-render
       (lambda (ctx)
	 ;;(ctx.drawImage (find-image "crab1.png") 0 (+ crab-offset 355))
	 (set! ctx.fillStyle "#606353")
	 
	 (set! ctx.font "normal 75pt pompiere")

	 (wrap-text ctx "Why We Love Wasps" 0 200 1300 100)
	 
	 (set! ctx.font "normal 25pt pompiere")
	 (wrap-text ctx "Wasps are super..." 0 300 800 40)
	 (set! ctx.font "normal 30pt pompiere")


	 )
       
       (game-modify-buttons
	(list
	 
	 (rect-button
	  "PLAY!"
	  (- default-button-x 200)
	  default-button-y
	  default-button-width default-button-height
	  "jumpy"
	  (lambda (c)
	    (button-sound)
	    (nightjar-game-screen c)))
	 
	 (rect-button
	  "ABOUT"
	  (+ default-button-x 200)
	  default-button-y
	  default-button-width default-button-height
	  "jumpy"
	  (lambda (c)
	    (button-sound)
	    (nightjar-about c)))
	 )
	c)))))

(define (nightjar-about c)
   (game-modify-render
    (lambda (ctx)
      ;;(ctx.drawImage (find-image "crab2.png") 1240 550)

      (set! ctx.font "normal 75pt pompiere")
      (wrap-text ctx "About the wasp game" 0 200 1300 100)
      (set! ctx.font "normal 22pt pompiere")

      (wrap-text ctx "Blah blah" 0 300 800 40)
      (set! ctx.font "normal 30pt pompiere")

      (set! ctx.globalAlpha 0.5)
      ;;(ctx.drawImage (find-image "foam-logo.png") (- (+ default-button-x 200) 50) 790)
      (set! ctx.globalAlpha 1.0)      
      )

    (game-modify-buttons
     (list
      (rect-button
       "Back"
       default-button-x
       default-button-y
       default-button-width 
       default-button-height 
       "jumpy"
       (lambda (c)
         (button-sound)
         (nightjar-intro game))))
     c)))

(define (nightjar-game-screen c)
  (game-modify-mouse-hook
   (lambda (state c)
     (game-modify-data
      (lambda (d)
	(nest-update-mouse (game-data c) state (game-mx c) (game-my c)))
      c))   
   (game-modify-render
    (lambda (ctx)
      (nest-render (game-data c) ctx))
    (game-modify-update
     (lambda (t c)
       (game-modify-data
	(lambda (d)
	  (nest-update (game-data c) (game-delta c)))
	(if (or (> (nest-time-of-year (game-data c)) nest-year-length)
		(< (nest-energy (game-data c)) 0)	    
		(< (length (nest-wasps (game-data c))) 1))	    
	    (nightjar-end c)
	    c)))
     (game-modify-buttons
      (list
       ) c)))))

(define (nightjar-end c)
   (game-modify-render
    (lambda (ctx)
      (set! ctx.fillStyle "#000")      
      (set! ctx.font "normal 75pt pompiere")
      (wrap-text ctx "Game Over" 0 200 1300 100)
      (set! ctx.font "normal 30pt pompiere")
      
      (let ((n (game-data c)))
	(ctx.fillText (string-append "energy: " (nest-energy n)) 500 300)
	(ctx.fillText (string-append "time of year: " (Math.floor (nest-time-of-year n))) 500 350)
	(ctx.fillText (string-append "season: " (time->season (nest-time-of-year n))) 500 400)
	(ctx.fillText (string-append "wasps: " (length (nest-wasps n))) 500 450)
	(ctx.fillText (string-append "cells: " (length (nest-cells n))) 500 500))


      (set! ctx.globalAlpha 0.5)
      ;;(ctx.drawImage (find-image "foam-logo.png") (- (+ default-button-x 200) 50) 790)
      (set! ctx.globalAlpha 1.0)      
      )
    (game-modify-update
     (lambda (t c)
       c)
     (game-modify-buttons
      (list
       (rect-button
	"Back"
	default-button-x
	default-button-y
	default-button-width 
	default-button-height 
	"jumpy"
	(lambda (c)
	  (button-sound)
	  (nightjar-intro game))))
      c))))



(set! ctx.font "normal 75pt pompiere")
(set! ctx.fillStyle "#606353")
(centre-text ctx "Loading..." 240 240)

;(load-sounds!
; (list
;  "found.wav"
;  ))


(load-images!
 (append 
  (anim->filenames wasp-animation)
  (list 
   "sprites/hex.png"
   "sprites/cloud-1.png"
   "sprites/cloud-2.png"
   "sprites/cloud-3.png"
   "sprites/cloud-4.png"
   "sprites/cloud-5.png"
   "sprites/cloud-6.png"
   "sprites/hex-1.png"
   "sprites/hex-2.png"
   "sprites/hex-3.png"
   "sprites/hex-4.png"
   "sprites/hex-drop.png"
   "sprites/poison.png"
   "sprites/spray-can.png"
   "backgrounds/temperate-city.png"
   "backgrounds/temperate-forest.png"
   ))
 (lambda ()
   (msg "loaded...")
   (start-game canvas ctx)))

